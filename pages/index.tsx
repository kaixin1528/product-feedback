import Head from "next/head";
import { GetStaticProps } from "next";
import SuggestionFeedback from "../components/SuggestionFeedback";
import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Menu from "../components/Menu";
import TabletMenu from "../components/TabletMenu";
import { url } from "../lib/Constant";
import data from "../data.json";

export type FeedbackData = {
  id: number;
  title: string;
  category: string;
  upvotes: number;
  status: string;
  description: string;
  comments?: any[];
};

export default function Home({ feedback }) {
  const productRequests: any[] = feedback["productRequests"];
  const [openMenu, setOpenMenu] = useState(false);
  const [filter, setFilter] = useState("");

  const menuVariants = {
    hidden: {
      x: 500,
      opacity: 0,
      transition: { type: "spring", duration: 0.8 },
    },
    visible: {
      x: 0,
      opacity: 1,
      transition: { type: "spring", duration: 3, stiffness: 110 },
    },
  };

  return (
    <main className='grid items-start overflow-x-hidden relative min-h-screen d:px-36 d:py-20 bg-rice-white'>
      <Head>
        <title>Product Feedback</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <section className='grid d:grid-cols-4 d:items-start'>
        <section className='grid t:grid-cols-3 d:grid-cols-1 d:p-0 t:p-12 t:gap-3 d:gap-6 bg-rice-white'>
          <header className='grid grid-cols-2 t:grid-cols-1 items-center t:items-end d:h-40 d:px-8 py-4 px-6 t:rounded-lg text-white bg-no-repeat bg-center bg-cover bg-m-header t:bg-t-header d:bg-d-header'>
            <section className='grid'>
              <h3 className='font-semibold t:font-bold t:text-lg text-left'>
                Fullstack Project
              </h3>
              <h5 className='text-xs t:text-sm text-white text-opacity-70 font-medium'>
                Feedback Board
              </h5>
            </section>
            <motion.button
              whileHover={{ scale: 1.1 }}
              className='justify-self-end t:hidden'
              onClick={() => setOpenMenu(!openMenu)}
            >
              <motion.svg
                width='20'
                height='17'
                stroke='white'
                xmlns='http://www.w3.org/2000/svg'
              >
                <g fill='#FFF' fillRule='evenodd'>
                  <motion.path d='M0 0h20v3H0zM0 7h20v3H0zM0 14h20v3H0z' />
                </g>
              </motion.svg>
            </motion.button>
          </header>
          <TabletMenu
            productRequests={productRequests}
            filter={filter}
            onFilter={setFilter}
          />
        </section>
        <AnimatePresence initial={false}>
          <motion.section
            variants={menuVariants}
            initial={{ opacity: 0 }}
            animate={openMenu ? "visible" : "hidden"}
            exit='hidden'
            className='z-10 t:hidden absolute inset-0 top-[4.5rem] bg-gray-600 bg-opacity-50'
          >
            <Menu
              productRequests={productRequests}
              filter={filter}
              onFilter={setFilter}
              onOpenMenu={() => setOpenMenu(!openMenu)}
            />
          </motion.section>
        </AnimatePresence>
        <SuggestionFeedback productRequests={productRequests} filter={filter} />
      </section>
    </main>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  // const res = await fetch(`${url}/api`, {
  //   method: "GET",
  // });
  // const feedback = await res.json();
  const feedback = data;

  return {
    props: {
      feedback,
    },
  };
};
